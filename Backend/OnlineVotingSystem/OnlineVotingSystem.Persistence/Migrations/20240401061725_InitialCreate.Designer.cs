// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineVotingSystem.Persistence.Context;

#nullable disable

namespace OnlineVotingSystem.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240401061725_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BallotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ElectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("Ballots");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BallotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("PartyAffiliationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BallotId");

                    b.HasIndex("PartyAffiliationId");

                    b.HasIndex("PositionId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Election", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PartyAffiliation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LogoImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PartyAffiliations");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PersonalDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PersonalDocuments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b55ea47a-9a28-4ea3-b536-da6e5e8ce51e"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7939),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "UMID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("21be3fe1-ab02-4404-8c10-b22d5175a261"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7957),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Driver’s License",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("60efe937-d9e0-45cc-937c-f34a02f70c85"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7959),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Professional Regulation Commission ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("d06d003b-0953-4d5a-8f23-1e4b61d503e5"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7960),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Passport",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("23e2ab8a-67bf-4c28-92ba-40909630ee40"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7961),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Senior Citizen ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("d3aa3c09-bd18-4bbc-8899-dff42b269c68"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7962),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "SSS ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("be8918ad-a804-4621-8e22-5a13924a4246"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7964),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Philippine Identification",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("fed7fb10-91d7-4ae5-bc79-a45ae72017c7"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7966),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "NBI Clearance",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("17ba6525-20b9-4127-b390-daac3398287d"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7967),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "BIR",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("ce349226-132f-41ad-a97f-eb653ea7ba27"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7968),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Pag-ibig ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("4f6c9bb5-58ed-4d5c-859c-baac05326e36"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7970),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Barangay ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("4779e112-5e7c-4297-be44-3f1f875a52de"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7971),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Philippine Postal ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("1158fab9-301e-4a09-946f-79beafd5e3e3"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7993),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "School ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("ce82c20c-582c-480d-b230-888d6be19a90"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(7995),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Other valid government-issued IDs",
                            IsActive = false
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca5dcc10-dc32-41d3-9635-7187e2530fed"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8041),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "President"
                        },
                        new
                        {
                            Id = new Guid("1cefbcec-49ca-44f6-8264-5de968be4c30"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8043),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice President"
                        },
                        new
                        {
                            Id = new Guid("98a792ff-8e2a-4999-81c7-f275cb351afd"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8045),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Senator"
                        },
                        new
                        {
                            Id = new Guid("35ee5ae0-2792-451a-b912-c7a2712bb71a"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8046),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Member of the House of Representatives"
                        },
                        new
                        {
                            Id = new Guid("4386c96f-2d7f-4109-b889-cd91cd828b34"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8048),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Governor"
                        },
                        new
                        {
                            Id = new Guid("604ead33-43a5-44cc-9295-2271ba05d587"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8049),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Mayor"
                        },
                        new
                        {
                            Id = new Guid("3622d0d2-5507-42fa-a703-fe56a5860441"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8051),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice Governor"
                        },
                        new
                        {
                            Id = new Guid("e9f0eafa-3075-4a3d-9698-7f34a7e8d300"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8052),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice Mayor"
                        },
                        new
                        {
                            Id = new Guid("6266af9c-ed9b-4109-9b65-e60a97ebecf8"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8054),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Councilor"
                        },
                        new
                        {
                            Id = new Guid("714d861d-322c-45a5-b813-e27ad19c17dd"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8055),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Barangay Captain"
                        },
                        new
                        {
                            Id = new Guid("b25e3866-8c1e-4893-a3dc-5ca008beafeb"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8057),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Barangay Kagawad"
                        },
                        new
                        {
                            Id = new Guid("2b66b86c-ea79-4c0d-a5c1-01052babfe46"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8058),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Sangguniang Kabataan Chairperson"
                        },
                        new
                        {
                            Id = new Guid("87f0121c-dab8-4833-8673-1b9ccfdb4dbd"),
                            DateCreated = new DateTime(2024, 4, 1, 14, 17, 25, 135, DateTimeKind.Local).AddTicks(8061),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Sangguniang Kabataan Kagawad"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("HasAgreedToTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidate")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PIDNumber")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PImage")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonalDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SuffixName")
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.Property<string>("VoterImages")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalDocumentId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e25bd99a-0efa-4527-85cc-6c77bd114fa8"),
                            Address = "123 Main Street",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2024, 4, 1, 6, 17, 25, 135, DateTimeKind.Utc).AddTicks(7683),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "garadojosephmartin98@gmail.com",
                            FirstName = "Joseph Martin",
                            Gender = "Male",
                            HasAgreedToTerms = false,
                            IsActive = true,
                            IsValidate = true,
                            LastName = "Garado",
                            Nationality = "Filipino",
                            Occupation = "Admin",
                            PIDNumber = "",
                            PImage = "",
                            Password = "jZae727K08KaOmKSgOaGzww/XVqGr/PKEgIMkjrcbJI=",
                            PersonalDocumentId = new Guid("d06d003b-0953-4d5a-8f23-1e4b61d503e5"),
                            PhoneNumber = "09199431060",
                            Religion = "Roman Catholic",
                            Role = 2,
                            VerificationStatus = 0,
                            VoterId = 4324,
                            VoterImages = "PathImages\\VoterImages\\admin picture.png",
                            ZipCode = "1234"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VotedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("VoterId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Election", "Election")
                        .WithMany("Ballots")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Election");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Ballot", "Ballot")
                        .WithMany("Candidates")
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.PartyAffiliation", "PartyAffiliation")
                        .WithMany("Candidates")
                        .HasForeignKey("PartyAffiliationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.Position", "Position")
                        .WithMany("Candidates")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ballot");

                    b.Navigation("PartyAffiliation");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.PersonalDocument", "PersonalDocument")
                        .WithMany()
                        .HasForeignKey("PersonalDocumentId");

                    b.Navigation("PersonalDocument");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Vote", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Candidate", "Candidate")
                        .WithMany("Votes")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.User", "Voter")
                        .WithMany("Votes")
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Voter");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Election", b =>
                {
                    b.Navigation("Ballots");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PartyAffiliation", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Position", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
