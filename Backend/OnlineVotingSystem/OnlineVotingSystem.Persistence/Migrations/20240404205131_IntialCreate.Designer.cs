// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineVotingSystem.Persistence.Context;

#nullable disable

namespace OnlineVotingSystem.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240404205131_IntialCreate")]
    partial class IntialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BallotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ElectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("Ballots");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BallotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("PartyAffiliationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BallotId");

                    b.HasIndex("PartyAffiliationId");

                    b.HasIndex("PositionId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Election", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PartyAffiliation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LogoImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PartyAffiliations");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PersonalDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PersonalDocuments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72a4850c-2e53-4432-af96-d0c4e86477e3"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(895),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "UMID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("99c8101a-689c-471e-93d8-1168c8c17a25"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(911),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Driver’s License",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("38e3359c-b3a0-47e0-bb00-6e53c44bc9ca"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(913),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Professional Regulation Commission ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("70b3873e-2fb8-4198-ab3b-57bd5300365b"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(914),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Passport",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("f4c8d4fa-59b0-44c9-8f41-0c38f164956f"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(916),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Senior Citizen ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("378bd013-de1e-4c2d-9651-394d0bb2e64f"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(918),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "SSS ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("05a00ad0-1696-47fd-90a0-61eec2d07d64"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(921),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Philippine Identification",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("422648ab-3996-4774-ae01-3f460e743660"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(923),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "NBI Clearance",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("3cd1df61-c4d6-46eb-8d2f-b073df13889d"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(924),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "BIR",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("b3feafcc-1907-4201-8777-e7bda33ff8d9"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(926),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Pag-ibig ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("e3fcd468-6654-44b4-a063-9f8a673c9fe9"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(928),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Barangay ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("4802db6b-4242-4d22-b795-a6049c799e5f"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(929),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Philippine Postal ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("f3fdcf92-c73c-449d-820f-9e80350211ba"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(931),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "School ID",
                            IsActive = false
                        },
                        new
                        {
                            Id = new Guid("e26ab451-4040-4b3a-9378-4cf403193c12"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(932),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Other valid government-issued IDs",
                            IsActive = false
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("adfb2084-4ba8-4eb0-8dee-5975d629636b"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(999),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "President"
                        },
                        new
                        {
                            Id = new Guid("961d2a1a-9826-461e-bfb3-a40003fbf42b"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1003),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice President"
                        },
                        new
                        {
                            Id = new Guid("456f6896-35e1-45f5-9da7-c8245a2358f4"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1005),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Senator"
                        },
                        new
                        {
                            Id = new Guid("9d0f3d34-7e90-4a71-844b-d19e78583353"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1007),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Member of the House of Representatives"
                        },
                        new
                        {
                            Id = new Guid("e4c9bc24-4597-4da4-91e8-bfaa40a1fbb8"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1009),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Governor"
                        },
                        new
                        {
                            Id = new Guid("1f62bb77-9b86-44d1-b581-1ecf9086f72c"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1011),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Mayor"
                        },
                        new
                        {
                            Id = new Guid("cb71d123-1b65-41d4-bfee-37c848d4c1af"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1013),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice Governor"
                        },
                        new
                        {
                            Id = new Guid("e59fb8ba-b0b9-434e-8369-c16cf1ac5695"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1015),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice Mayor"
                        },
                        new
                        {
                            Id = new Guid("ce1cf449-f899-4573-b859-39daba52b122"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1017),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Councilor"
                        },
                        new
                        {
                            Id = new Guid("457b5622-35de-4b51-bd93-aead7d063caa"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1018),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Barangay Captain"
                        },
                        new
                        {
                            Id = new Guid("5e2a5d52-fc93-4853-ac22-e1dd3fb265c2"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1020),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Barangay Kagawad"
                        },
                        new
                        {
                            Id = new Guid("fea2a359-018c-4d44-8743-a5d4646e02a6"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1022),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Sangguniang Kabataan Chairperson"
                        },
                        new
                        {
                            Id = new Guid("41526f2b-9136-43e5-aa05-5e161feed7a6"),
                            DateCreated = new DateTime(2024, 4, 5, 4, 51, 29, 988, DateTimeKind.Local).AddTicks(1025),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Sangguniang Kabataan Kagawad"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("HasAgreedToTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidate")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PIDNumber")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PImage")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonalDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SuffixName")
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.Property<string>("VoterImages")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalDocumentId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66bb4342-db25-4f46-b6bf-8ecbae69bd3b"),
                            Address = "123 Main Street",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2024, 4, 4, 20, 51, 29, 988, DateTimeKind.Utc).AddTicks(586),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "garadojosephmartin98@gmail.com",
                            FirstName = "Joseph Martin",
                            Gender = "Male",
                            HasAgreedToTerms = false,
                            IsActive = true,
                            IsValidate = true,
                            LastName = "Garado",
                            Nationality = "Filipino",
                            Occupation = "Admin",
                            PIDNumber = "",
                            PImage = "",
                            Password = "jZae727K08KaOmKSgOaGzww/XVqGr/PKEgIMkjrcbJI=",
                            PersonalDocumentId = new Guid("70b3873e-2fb8-4198-ab3b-57bd5300365b"),
                            PhoneNumber = "09199431060",
                            Religion = "Roman Catholic",
                            Role = 2,
                            VerificationStatus = 0,
                            VoterId = 3609,
                            VoterImages = "PathImages\\VoterImages\\admin picture.png",
                            ZipCode = "1234"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VotedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("VoterId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Election", "Election")
                        .WithMany("Ballots")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Election");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Ballot", "Ballot")
                        .WithMany("Candidates")
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.PartyAffiliation", "PartyAffiliation")
                        .WithMany("Candidates")
                        .HasForeignKey("PartyAffiliationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.Position", "Position")
                        .WithMany("Candidates")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ballot");

                    b.Navigation("PartyAffiliation");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.PersonalDocument", "PersonalDocument")
                        .WithMany()
                        .HasForeignKey("PersonalDocumentId");

                    b.Navigation("PersonalDocument");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Vote", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Candidate", "Candidate")
                        .WithMany("Votes")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.User", "Voter")
                        .WithMany("Votes")
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Voter");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Election", b =>
                {
                    b.Navigation("Ballots");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PartyAffiliation", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Position", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
