// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineVotingSystem.Persistence.Context;

#nullable disable

namespace OnlineVotingSystem.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240329051642_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BallotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ElectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("Ballots");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BallotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("PartyAffiliationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BallotId");

                    b.HasIndex("PartyAffiliationId");

                    b.HasIndex("PositionId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Election", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PartyAffiliation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LogoImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PartyAffiliations");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PersonalDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdNUmber")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalDocuments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4476a675-c1a2-463b-97a4-0aad4a987350"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(7971),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "UMID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("84c3946c-de2e-4037-a8ba-f812b085e7ef"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(7991),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Driver’s License",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("6fc86bd3-8334-4912-ad61-ae731f76c418"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(7994),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Professional Regulation Commission ID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("759f6cbb-2bba-46e7-8a8e-57bf4218067a"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(7996),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Passport",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("c8fe4bfa-89a1-4e38-9a24-709f4da90370"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(7999),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Senior Citizen ID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("76770968-5967-4500-b5d7-0b68c2ec5f40"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8001),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "SSS ID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("a4867202-dc66-4d11-b095-e64e9fdff927"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8004),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Philippine Identification",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("1a0f0421-f9d0-41ce-8c6e-eca3bb26b71d"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8006),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "NBI Clearance",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("a37c67bf-cb39-4205-a9ed-6e5559c4c4d9"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8008),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "BIR",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("28da71f3-1eaa-451d-85e8-8edc77f45605"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8011),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Pag-ibig ID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("0800e5f3-eea1-4921-8893-a7a217a43b43"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8013),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Barangay ID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("10725f4d-2c3e-4555-8a5b-dc1abb89cd28"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8015),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Philippine Postal ID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("1229d9d3-96ec-4e5a-8d1d-436c4c25227a"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8018),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "School ID",
                            IdNUmber = "",
                            Image = ""
                        },
                        new
                        {
                            Id = new Guid("67c9d101-0bd7-4abc-a8de-d37fbca2d870"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8020),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "Other valid government-issued IDs",
                            IdNUmber = "",
                            Image = ""
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfe5a66e-2bb2-419f-b51a-52fab32715d3"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8090),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "President"
                        },
                        new
                        {
                            Id = new Guid("d6c3febf-610c-428f-8c32-635b9c7c5b87"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8093),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice President"
                        },
                        new
                        {
                            Id = new Guid("1371312d-3f5b-44e8-8bed-1d2a57ba4e4b"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8096),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Senator"
                        },
                        new
                        {
                            Id = new Guid("9ce6b642-6d0f-468d-a8dc-8ac3f417ce1a"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8099),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Member of the House of Representatives"
                        },
                        new
                        {
                            Id = new Guid("8fdd23f4-8f66-46ac-82de-615ade7c9927"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8102),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Governor"
                        },
                        new
                        {
                            Id = new Guid("50770836-874c-455d-8bfe-dc3c58cef19e"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8104),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Mayor"
                        },
                        new
                        {
                            Id = new Guid("71f1b20f-29e6-44a7-a432-034ce7a89be9"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8107),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice Governor"
                        },
                        new
                        {
                            Id = new Guid("02766c6f-98ea-426d-8a72-803a71184471"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8110),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Vice Mayor"
                        },
                        new
                        {
                            Id = new Guid("d3a20db5-644a-461f-8173-6cdf7c167e20"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8112),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Councilor"
                        },
                        new
                        {
                            Id = new Guid("3da20fa3-a470-4f81-9e8e-bb4cd084d830"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8115),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Barangay Captain"
                        },
                        new
                        {
                            Id = new Guid("b188d6f7-3a39-41ce-af0a-e2f2d4ce7afc"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8118),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Barangay Kagawad"
                        },
                        new
                        {
                            Id = new Guid("fdc78560-1aad-4d78-a446-3ef77312bcbb"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8120),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Sangguniang Kabataan Chairperson"
                        },
                        new
                        {
                            Id = new Guid("a90dbdfd-f2a4-4ec9-9295-d2b5178cc6d6"),
                            DateCreated = new DateTime(2024, 3, 29, 13, 16, 41, 526, DateTimeKind.Local).AddTicks(8123),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Sangguniang Kabataan Kagawad"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasAgreedToTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidate")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SuffixName")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.Property<string>("VoterImages")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d090c29-1791-4d70-ac95-93d8cf470660"),
                            Address = "123 Main Street",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2024, 3, 29, 5, 16, 41, 526, DateTimeKind.Utc).AddTicks(6945),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "garadojosephmartin98@gmail.com",
                            FirstName = "Joseph Martin",
                            Gender = "Male",
                            HasAgreedToTerms = false,
                            IsActive = true,
                            IsValidate = true,
                            LastName = "Garado",
                            Password = "jZae727K08KaOmKSgOaGzww/XVqGr/PKEgIMkjrcbJI=",
                            PhoneNumber = "09199431060",
                            Role = 2,
                            SuffixName = "",
                            VerificationStatus = 0,
                            VoterId = 2248,
                            VoterImages = "PathImages\\VoterImages\\admin picture.png"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VotedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("VoterId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Election", "Election")
                        .WithMany("Ballots")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Election");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Ballot", "Ballot")
                        .WithMany("Candidates")
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.PartyAffiliation", "PartyAffiliation")
                        .WithMany("Candidates")
                        .HasForeignKey("PartyAffiliationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.Position", "Position")
                        .WithMany("Candidates")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ballot");

                    b.Navigation("PartyAffiliation");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PersonalDocument", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.User", null)
                        .WithMany("Documents")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Vote", b =>
                {
                    b.HasOne("OnlineVotingSystem.Domain.Entity.Candidate", "Candidate")
                        .WithMany("Votes")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.Domain.Entity.User", "Voter")
                        .WithMany("Votes")
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Voter");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Ballot", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Candidate", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Election", b =>
                {
                    b.Navigation("Ballots");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.PartyAffiliation", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.Position", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("OnlineVotingSystem.Domain.Entity.User", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
